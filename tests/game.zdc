
io :: import io;
glfw :: import glfw;
gl :: import gl;

main :: () -> int
{
    if (!glfw.glfwInit())
    {
        io.printf("glfwInit failed\n");
        return 9;
    }

    width := 640;
    height := 480;

    window := glfw.glfwCreateWindow(width, height, "Triangles!!!", null, null);
    if (!window)
    {
        io.printf("glfwCreateWindow failed\n");
        return 9;
    }

    glfw.glfwMakeContextCurrent(window);
    // glfw.glfwSwapInterval(1);
    gl.load(*glfw.glfwGetProcAddress);
    // gl.glViewport(0, 0, width, height);

    vendor := gl.glGetString(gl.GL_VENDOR);
    renderer := gl.glGetString(gl.GL_RENDERER);
    version := gl.glGetString(gl.GL_VERSION);

    io.printf("GL vendor: %s\n", vendor);
    io.printf("GL renderer: %s\n", renderer);
    io.printf("GL version: %s\n", version);

    gl.glClearColor(0.0, 1.0, 0.0, 1.0);

    // io.printf("gl.GL_COLOR_BUFFER_BIT: %#x\n", gl.GL_COLOR_BUFFER_BIT);

    while (!glfw.glfwWindowShouldClose(window))
    {
        gl.glClear(gl.GL_COLOR_BUFFER_BIT);

        glfw.glfwSwapBuffers(window);
        glfw.glfwPollEvents();
    }
}
