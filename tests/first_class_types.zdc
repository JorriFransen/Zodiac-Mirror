_c :: import c;
__printer :: import print;
using __printer;

main :: ()
{
    _c.open_std_handles();

    print("First class types test\n");

    print_type_id(int);
    print_type_id(s64);
    print_type_id(u64);
    print_type_id(String);
    print_type_id(float);
    print_type_id(Any);

    print("\n");

    poly_print_type_id(int);
    poly_print_type_id(s64);
    poly_print_type_id(u64);
    poly_print_type_id(String);
    poly_print_type_id(float);
    poly_print_type_id(Any);

    print("\n");

    print_type_name(int);
    print_type_name(int);
    print_type_name(s64);
    print_type_name(u64);
    print_type_name(String);
    print_type_name(float);
    print_type_name(Any);

    return 0;
}

print_type_id :: (type: Type)
{
    id := (:int)type;
    print("id: %\n", id);
}

poly_print_type_id :: ($type: Type)
{
    id := (:int)type;
    print("id: %\n", id);
}

print_type_name :: (type: Type)
{
    static_if (ZODIAC_RUNNING_BYTECODE) {
        ti := type_info(type);
        print("%\n", ti.name.data);
    } else {
        print("type_info with first class type as argument in not yet supported in llvm, id: %\n",
              (:int)type);
    }

}

