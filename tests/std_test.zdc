
std :: import std;
using std;

main :: ()
{
    // c_string := "This is a test string";
    // print(std.string_length("abc"));
    // test_str : String = { c_string, _c.strlen(c_string) };

    // print(test_str);

    // print({ "This should work as well", 5 });
    // print("This should work as well");
    // print(c_string);

    int_array : Array(int);
    int_array.data = (:*int)_c.malloc(sizeof(int) * 5);
    int_array.capacity = 5;
    int_array.count = 5;

    float_array : Array(float);
    float_array.data = (:*float)_c.malloc(sizeof(float) * 5);
    float_array.capacity = 5;
    float_array.count = 5;

    int_array2 : Array(int);
    int_array2.data = (:*int)_c.malloc(sizeof(int) * 5);
    int_array2.capacity = 5;
    int_array2.count = 5;

    for (i : u64 = 0; i < float_array.count; i = i + 1)
    {
        j := i + 1;
        int_array.data[i] = j * j;
        int_array2.data[i] = j + j;
        float_array.data[i] = j * j / 3.0;
    }

    for (i : u64 = 0; i < int_array.count; i = i + 1)
    {
        _c.printf("int_array[%d]: %d\n", i, int_array.data[i]);
    }

    for (i : u64 = 0; i < float_array.count; i = i + 1)
    {
        _c.printf("float_array[%d]: %f\n", i, float_array.data[i]);
    }

    for (i : u64 = 0; i < int_array2.count; i = i + 1)
    {
        _c.printf("int_array2[%d]: %d\n", i, int_array2.data[i]);
    }
}

