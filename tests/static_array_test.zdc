
_c :: import c;

WA :: struct
{
    bytes : [8]u8;
}

main :: ()
{
    _c.open_std_handles();

    _c.printf("static array test\n");

    wa : WA;

    wa.bytes[0] = 1;
    wa.bytes[1] = 2;
    wa.bytes[2] = 4;

    bytes : [8]u8;
    bytes[0] = 2;
    bytes[1] = 4;

    b2 : [2]int = { 1, 2 };

    // _c.printf("*wa.bytes[0]: %p\n", *wa.bytes[0]);

    for (i := 0; i < array_length(wa.bytes); i++)
    {
        _c.printf("wa.bytes[%d]: %d\n", i, wa.bytes[i]);
    }

    for (i := 0; i < array_length(bytes); i++)
    {
        _c.printf("bytes[%d]: %d\n", i, bytes[i]);
    }


    // _c.printf("*bytes: %p\n", *bytes);
    // _c.printf("*bytes[0]: %p\n", *bytes[0]);
    assert((:*u8)(*bytes) == *bytes[0]);
    print_8x_u8_array_ptr(*bytes);
    print_8x_u8_array(bytes);
    assert(bytes[4] == 55);
    print_8x_u8_array_ptr(*bytes);

    return 0;
}

print_8x_u8_array_ptr :: (arr: *[8]u8)
{
    // _c.printf("arr: %p\n", arr);
    // _c.printf("*(<arr)[0]: %p\n", *(<arr)[0]);
    assert((:*u8)(arr) == *(<arr)[0]);
    for (i := 0; i < array_length(<arr); i++)
    {
        _c.printf("(<arr)[%d]: %d\n", i, (<arr)[i]);
    }
}

print_8x_u8_array :: (arr: [8]u8)
{
    // _c.printf("*arr[0]: %p\n", *arr[0]);
    for (i := 0; i < array_length(arr); i++)
    {
        _c.printf("arr[%d]: %d\n", i, arr[i]);
    }
    arr[4] = 55;
}
