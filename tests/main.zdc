
add :: (a: int, b: int) -> int
{
    return a + b;
}

main :: () -> int
{
    x : int = add(4, 5);
    y := sub(x, 3);
    return y;
}

sub :: (a: int, b: int)
{
    return a - b;
}

fib_recursive :: (x: int)
{
    if (x < 2)
    {
        return x;
    }
    else
    {
        return fib_recursive(x - 1) + fib_recursive(x - 2);
    }
}

// Should result in the following tokens:
//   IDENT "main"
//   COLON ":"
//   COLON ":"
//   LPAREN "("
//   RPAREN ")"
//   RARROW "->"
//   IDENT "int"
//   LBRACE "{"
//   RBRACE "}"
//   IDENT "return"
//   INTEGER "2"
//   PLUS "+"
//   INTEGER "4";
//   RBRACE "}"


